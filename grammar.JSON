[
 {
  "program": [
   [
    "declaration-list"
   ]
  ]
 }, 
 {
  "declaration-list": [
   [
    "declaration-list", 
    "declaration"
   ], 
   [
    "declaration"
   ]
  ]
 }, 
 {
  "declaration": [
   [
    "var-declaration"
   ], 
   [
    "fun-declaration"
   ], 
   [
    "assignment"
   ]
  ]
 }, 
 {
  "assignment": [
   [
    "ID-space-list", 
    "=", 
    "NUM-space-list"
   ], 
   [
    "ID-space-list", 
    "=", 
    "simple-expression", 
    ";"
   ], 
   [
    "ID-space-list", 
    "=", 
    "other-selection-stmt"
   ]
  ]
 }, 
 {
  "var-declaration": [
   [
    "type-specifier", 
    "ID-space-list", 
    ";"
   ]
  ]
 }, 
 {
  "NUM-space-list": [
   [
    "NUM-space-list", 
    "NUM"
   ], 
   [
    "NUM"
   ]
  ]
 }, 
 {
  "ID-space-list": [
   [
    "ID-space-list", 
    "ID"
   ], 
   [
    "ID"
   ]
  ]
 }, 
 {
  "TYPE-list": [
   [
    "TYPE-list", 
    ",", 
    "TYPE"
   ], 
   [
    "TYPE"
   ]
  ]
 }, 
 {
  "TYPE-space-list": [
   [
    "TYPE-list", 
    "TYPE"
   ], 
   [
    "TYPE"
   ]
  ]
 }, 
 {
  "type-specifier": [
   [
    "TYPE", 
    "bracket-list"
   ]
  ]
 }, 
 {
  "bracket-list": [
   [
    "bracket-list", 
    "bracket-group"
   ], 
   [
    "empty"
   ]
  ]
 }, 
 {
  "bracket-group": [
   [
    "[", 
    "]"
   ], 
   [
    "[", 
    "NUM", 
    "]"
   ]
  ]
 }, 
 {
  "fun-declaration": [
   [
    "ID-space-list", 
    "=", 
    "anonymous-function"
   ]
  ]
 }, 
 {
  "anonymous-function": [
   [
    "params", 
    "=>", 
    "function-body"
   ], 
   [
    "params", 
    "=>", 
    "final-stmt"
   ]
  ]
 }, 
 {
  "function-body": [
   [
    "{", 
    "local-declarations", 
    "statement-list", 
    "final-stmt", 
    "}"
   ]
  ]
 }, 
 {
  "map-comprehension": [
   [
    "[", 
    "ID", 
    "in", 
    "ID", 
    "=>", 
    "final-stmt", 
    "]"
   ], 
   [
    "[", 
    "ID", 
    "in", 
    "ID", 
    "=>", 
    "function-body", 
    "]"
   ]
  ]
 }, 
 {
  "params": [
   [
    "param-list"
   ]
  ]
 }, 
 {
  "param-list": [
   [
    "param-list", 
    ",", 
    "param"
   ], 
   [
    "param"
   ]
  ]
 }, 
 {
  "param": [
   [
    "type-specifier", 
    "ID-space-list"
   ]
  ]
 }, 
 {
  "compound-stmt": [
   [
    "{", 
    "local-declarations", 
    "statement-list", 
    "final-stmt", 
    "}"
   ]
  ]
 }, 
 {
  "local-declarations": [
   [
    "local-declarations", 
    "var-declaration"
   ], 
   [
    "empty"
   ]
  ]
 }, 
 {
  "statement-list": [
   [
    "statement-list", 
    "statement"
   ], 
   [
    "empty"
   ]
  ]
 }, 
 {
  "statement": [
   [
    "expression-stmt"
   ], 
   [
    "selection-stmt"
   ], 
   [
    "iteration-stmt"
   ]
  ]
 }, 
 {
  "final-stmt": [
   [
    "simple-expression"
   ], 
   [
    "other-selection-stmt"
   ]
  ]
 }, 
 {
  "expression-stmt": [
   [
    "expression", 
    ";"
   ], 
   [
    ";"
   ]
  ]
 }, 
 {
  "other-selection-stmt": [
   [
    "clause-list", 
    "final-clause"
   ]
  ]
 }, 
 {
  "final-clause": [
   [
    "[", 
    "non", 
    "=>", 
    "compound-stmt"
   ], 
   [
    "[", 
    "non", 
    "=>", 
    "final-stmt"
   ]
  ]
 }, 
 {
  "clause-list": [
   [
    "clause-list", 
    "clause"
   ], 
   [
    "clause"
   ]
  ]
 }, 
 {
  "clause": [
   [
    "[", 
    "(", 
    "boolExprList", 
    ")", 
    "=>", 
    "final-stmt"
   ], 
   [
    "[", 
    "(", 
    "boolExprList", 
    ")", 
    "=>", 
    "compound-stmt"
   ]
  ]
 }, 
 {
  "selection-stmt": [
   [
    "if", 
    "(", 
    "expression", 
    ")", 
    "statement"
   ], 
   [
    "if", 
    "(", 
    "expression", 
    ")", 
    "statement", 
    "else", 
    "statement"
   ]
  ]
 }, 
 {
  "iteration-stmt": [
   [
    "while", 
    "(", 
    "expression", 
    ")", 
    "statement"
   ]
  ]
 }, 
 {
  "return-stmt": [
   [
    "return", 
    ";"
   ], 
   [
    "return", 
    "expression", 
    ";"
   ]
  ]
 }, 
 {
  "expression": [
   [
    "var", 
    "=", 
    "expression"
   ], 
   [
    "simple-expression"
   ]
  ]
 }, 
 {
  "var": [
   [
    "ID"
   ], 
   [
    "ID", 
    "[", 
    "expression", 
    "]"
   ]
  ]
 }, 
 {
  "boolExprList": [
   [
    "boolExprList", 
    "v", 
    "boolTermList"
   ], 
   [
    "boolTermList"
   ]
  ]
 }, 
 {
  "boolTermList": [
   [
    "boolTermList", 
    "^", 
    "boolFactor"
   ], 
   [
    "boolFactor"
   ]
  ]
 }, 
 {
  "boolFactor": [
   [
    "simple-expression"
   ], 
   [
    "not", 
    "simple-expression"
   ], 
   [
    "(", 
    "boolExprList", 
    ")"
   ]
  ]
 }, 
 {
  "simple-expression": [
   [
    "additive-expression", 
    "relop", 
    "additive-expression"
   ], 
   [
    "additive-expression"
   ]
  ]
 }, 
 {
  "relop": [
   [
    "<="
   ], 
   [
    "<"
   ], 
   [
    ">"
   ], 
   [
    ">="
   ], 
   [
    "=="
   ], 
   [
    "!="
   ]
  ]
 }, 
 {
  "additive-expression": [
   [
    "additive-expression", 
    "addop", 
    "term"
   ], 
   [
    "term"
   ]
  ]
 }, 
 {
  "addop": [
   [
    "+"
   ], 
   [
    "-"
   ]
  ]
 }, 
 {
  "term": [
   [
    "term", 
    "mulop", 
    "factor"
   ], 
   [
    "factor"
   ]
  ]
 }, 
 {
  "mulop": [
   [
    "*"
   ], 
   [
    "/"
   ]
  ]
 }, 
 {
  "factor": [
   [
    "(", 
    "expression", 
    ")"
   ], 
   [
    "var"
   ], 
   [
    "call"
   ], 
   [
    "NUM"
   ], 
   [
    "-", 
    "NUM"
   ]
  ]
 }, 
 {
  "call": [
   [
    "var", 
    "(", 
    "args", 
    ")"
   ]
  ]
 }, 
 {
  "args": [
   [
    "arg-list"
   ], 
   [
    "empty"
   ]
  ]
 }, 
 {
  "arg-list": [
   [
    "arg-list", 
    ",", 
    "expression"
   ], 
   [
    "arg-list", 
    ",", 
    "anonymous-function"
   ], 
   [
    "expression"
   ]
  ]
 }
]